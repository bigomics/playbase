% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pgx-compute.R
\name{pgx.createPGX}
\alias{pgx.createPGX}
\title{Create a pgx object}
\usage{
pgx.createPGX(
  counts,
  samples,
  contrasts,
  X = NULL,
  is.logx = NULL,
  batch.correct = TRUE,
  auto.scale = TRUE,
  filter.genes = TRUE,
  prune.samples = FALSE,
  only.known = TRUE,
  only.hugo = TRUE,
  convert.hugo = TRUE,
  do.cluster = TRUE,
  cluster.contrasts = FALSE,
  do.clustergenes = TRUE,
  only.proteincoding = TRUE
)
}
\arguments{
\item{X}{dataframe. value}

\item{is.logx}{boolean. value}

\item{batch.correct}{boolean. value}

\item{auto.scale}{boolean. value}

\item{filter.genes}{boolean. value}

\item{prune.samples}{boolean. value}

\item{only.known}{boolean. value}

\item{only.hugo}{boolean. value}

\item{convert.hugo}{boolean. value}

\item{do.cluster}{boolean. value}

\item{cluster.contrasts}{boolean. value}

\item{do.clustergenes}{boolean. value}

\item{only.proteincoding}{boolean. value}

\item{counts.file}{a playbase::COUNTS file}

\item{samples.file}{a playbase::SAMPLES file}

\item{contrasts.file}{a playbase::CONTRASTS file}
}
\value{
list. represents a pgx object
}
\description{
This function creates a pgx object, which is the core object in the
OmicsPlayground.
}
\examples{
# first step is to create pgx 
pgx <- playbase::pgx.createPGX(
 counts = playbase::COUNTS,
 samples = playbase::SAMPLES,
 contrasts = playbase::CONTRASTS
)

# once pgx is created, we can compute the modules
pgx <- playbase::pgx.computePGX(
  pgx = pgx
)

# if you want a more minimal (and quick) example for testing, use the settings below

pgx <- playbase::pgx.createPGX(
 counts = playbase::COUNTS,
 samples = playbase::SAMPLES,
 contrasts = playbase::CONTRASTS[1]
)

pgx <- playbase::pgx.computePGX(
  pgx = pgx,
  max.genes = 10000,
  max.genesets = 1000,
  gx.methods = c("ttest.welch"),
  gset.methods = c("fisher")
)
}

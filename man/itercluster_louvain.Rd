% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xcr-graph.r
\name{itercluster_louvain}
\alias{itercluster_louvain}
\title{Louvain Clustering for Graphs}
\usage{
itercluster_louvain(g, n = 3)
}
\arguments{
\item{g}{An igraph graph object to cluster}

\item{n}{The number of Louvain iterations to perform. Default is 3.}
}
\value{
The updated graph object with a "louvain" vertex attribute containing cluster assignments.
}
\description{
Performs Louvain clustering on an igraph graph object to detect communities.
}
\details{
Louvain Clustering for Graphs

This function implements the Louvain algorithm for community detection on a graph.
It takes an igraph graph object \code{g} and performs \code{n} iterations of Louvain clustering.
In each iteration it groups nodes into communities that maximize modularity.

The algorithm optimizes modularity in a greedy fashion by first assigning each node to its own community. 
It then goes through nodes repeatedly to evaluate moving them to neighboring communities. If a move increases modularity it is accepted.
This local optimization is applied iteratively to hierarchically build communities.

The number of iterations \code{n} controls the granularity of the detected communities.
More iterations lead to more fine-grained communities.

The graph object \code{g} is updated in-place by adding a "louvain" vertex attribute containing the cluster assignment of each node after \code{n} iterations.
The updated \code{g} is returned by the function.
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pgx_core.R
\name{create_pgx}
\alias{create_pgx}
\title{Create a pgx object}
\usage{
create_pgx(
  counts,
  samples,
  contrasts,
  X = NULL,
  is.logx = NULL,
  batch.correct = TRUE,
  auto.scale = TRUE,
  filter.genes = TRUE,
  prune.samples = FALSE,
  only.known = TRUE,
  only.hugo = TRUE,
  convert.hugo = TRUE,
  do.cluster = TRUE,
  cluster.contrasts = FALSE,
  do.clustergenes = TRUE,
  only.proteincoding = TRUE
)
}
\arguments{
\item{counts}{dataframe. The counts of the data}

\item{samples}{dataframe. The samples of the data}

\item{contrasts}{dataframe. The contrasts of the data}

\item{X}{datatype}

\item{is.logx}{datatype}

\item{batch.correct}{datatype}

\item{auto.scale}{datatype}

\item{filter.genes}{datatype}

\item{prune.samples}{datatype}

\item{only.known}{datatype}

\item{only.hugo}{datatype}

\item{convert.hugo}{datatype}

\item{do.cluster}{datatype}

\item{cluster.contrasts}{datatype}

\item{do.clustergenes}{datatype}

\item{only.proteincoding}{datatype}
}
\value{
a list (pgx object)
}
\description{
This function creates a pgx object (the core object
used in playbase) from an input of counts, samples, and
contrasts.
}
\details{
The pgx object is a list containing the following elements:
 - name
 - date
 - datatype
 - description
 - samples
 - counts
 - contrasts
 - X
 - total_counts
 - counts_multiplier
 - genes
 - and others that are dynamic / undocumented:
   - tsne2d
   - tsne3d
   - cluster
   - cluster.genes

This function generally does the following:
 - handles missing values, repeat values, etc.
 - scales or normalizes the data
 - annotates genes
 - infers the cell cycle / gender
 - performs batch correction
 - clusters the data

Notes:
 - consider making "pgx_options" function/object to contain
   all of the possible options / parameters that can be passed
   to the "create_pgx" and "compute_pgx" functions
}
\examples{
counts <- read_counts(example_file("counts.csv"))
samples <- read_samples(example_file("samples.csv"))
contrasts <- read_contrasts(example_file("contrasts.csv"))
## takes too long
# my_pgx <- create_pgx(counts, samples, contrasts)
}
